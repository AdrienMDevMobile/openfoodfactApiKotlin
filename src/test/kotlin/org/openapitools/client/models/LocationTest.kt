/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.Location
import org.openapitools.client.models.LocationOsmTypeEnum

class LocationTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Location
        //val modelInstance = Location()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `osmId`
        should("test osmId") {
            // uncomment below to test the property
            //modelInstance.osmId shouldBe ("TODO")
        }

        // to test the property `osmType`
        should("test osmType") {
            // uncomment below to test the property
            //modelInstance.osmType shouldBe ("TODO")
        }

        // to test the property `updated`
        should("test updated") {
            // uncomment below to test the property
            //modelInstance.updated shouldBe ("TODO")
        }

        // to test the property `osmName`
        should("test osmName") {
            // uncomment below to test the property
            //modelInstance.osmName shouldBe ("TODO")
        }

        // to test the property `osmDisplayName`
        should("test osmDisplayName") {
            // uncomment below to test the property
            //modelInstance.osmDisplayName shouldBe ("TODO")
        }

        // to test the property `osmTagKey`
        should("test osmTagKey") {
            // uncomment below to test the property
            //modelInstance.osmTagKey shouldBe ("TODO")
        }

        // to test the property `osmTagValue`
        should("test osmTagValue") {
            // uncomment below to test the property
            //modelInstance.osmTagValue shouldBe ("TODO")
        }

        // to test the property `osmAddressPostcode`
        should("test osmAddressPostcode") {
            // uncomment below to test the property
            //modelInstance.osmAddressPostcode shouldBe ("TODO")
        }

        // to test the property `osmAddressCity`
        should("test osmAddressCity") {
            // uncomment below to test the property
            //modelInstance.osmAddressCity shouldBe ("TODO")
        }

        // to test the property `osmAddressCountry`
        should("test osmAddressCountry") {
            // uncomment below to test the property
            //modelInstance.osmAddressCountry shouldBe ("TODO")
        }

        // to test the property `osmAddressCountryCode`
        should("test osmAddressCountryCode") {
            // uncomment below to test the property
            //modelInstance.osmAddressCountryCode shouldBe ("TODO")
        }

        // to test the property `osmLat`
        should("test osmLat") {
            // uncomment below to test the property
            //modelInstance.osmLat shouldBe ("TODO")
        }

        // to test the property `osmLon`
        should("test osmLon") {
            // uncomment below to test the property
            //modelInstance.osmLon shouldBe ("TODO")
        }

        // to test the property `priceCount`
        should("test priceCount") {
            // uncomment below to test the property
            //modelInstance.priceCount shouldBe ("TODO")
        }

        // to test the property `userCount`
        should("test userCount") {
            // uncomment below to test the property
            //modelInstance.userCount shouldBe ("TODO")
        }

        // to test the property `productCount`
        should("test productCount") {
            // uncomment below to test the property
            //modelInstance.productCount shouldBe ("TODO")
        }

        // to test the property `proofCount`
        should("test proofCount") {
            // uncomment below to test the property
            //modelInstance.proofCount shouldBe ("TODO")
        }

        // to test the property `created`
        should("test created") {
            // uncomment below to test the property
            //modelInstance.created shouldBe ("TODO")
        }

    }
}
