/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ProductFull
import org.openapitools.client.models.ProductFullSource

class ProductFullTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ProductFull
        //val modelInstance = ProductFull()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `code`
        should("test code") {
            // uncomment below to test the property
            //modelInstance.code shouldBe ("TODO")
        }

        // to test the property `updated`
        should("test updated") {
            // uncomment below to test the property
            //modelInstance.updated shouldBe ("TODO")
        }

        // to test the property `source`
        should("test source") {
            // uncomment below to test the property
            //modelInstance.source shouldBe ("TODO")
        }

        // to test the property `productName`
        should("test productName") {
            // uncomment below to test the property
            //modelInstance.productName shouldBe ("TODO")
        }

        // to test the property `imageUrl`
        should("test imageUrl") {
            // uncomment below to test the property
            //modelInstance.imageUrl shouldBe ("TODO")
        }

        // to test the property `productQuantity`
        should("test productQuantity") {
            // uncomment below to test the property
            //modelInstance.productQuantity shouldBe ("TODO")
        }

        // to test the property `productQuantityUnit`
        should("test productQuantityUnit") {
            // uncomment below to test the property
            //modelInstance.productQuantityUnit shouldBe ("TODO")
        }

        // to test the property `categoriesTags`
        should("test categoriesTags") {
            // uncomment below to test the property
            //modelInstance.categoriesTags shouldBe ("TODO")
        }

        // to test the property `brands`
        should("test brands") {
            // uncomment below to test the property
            //modelInstance.brands shouldBe ("TODO")
        }

        // to test the property `brandsTags`
        should("test brandsTags") {
            // uncomment below to test the property
            //modelInstance.brandsTags shouldBe ("TODO")
        }

        // to test the property `labelsTags`
        should("test labelsTags") {
            // uncomment below to test the property
            //modelInstance.labelsTags shouldBe ("TODO")
        }

        // to test the property `nutriscoreGrade`
        should("test nutriscoreGrade") {
            // uncomment below to test the property
            //modelInstance.nutriscoreGrade shouldBe ("TODO")
        }

        // to test the property `ecoscoreGrade`
        should("test ecoscoreGrade") {
            // uncomment below to test the property
            //modelInstance.ecoscoreGrade shouldBe ("TODO")
        }

        // to test the property `novaGroup`
        should("test novaGroup") {
            // uncomment below to test the property
            //modelInstance.novaGroup shouldBe ("TODO")
        }

        // to test the property `uniqueScansN`
        should("test uniqueScansN") {
            // uncomment below to test the property
            //modelInstance.uniqueScansN shouldBe ("TODO")
        }

        // to test the property `priceCount`
        should("test priceCount") {
            // uncomment below to test the property
            //modelInstance.priceCount shouldBe ("TODO")
        }

        // to test the property `locationCount`
        should("test locationCount") {
            // uncomment below to test the property
            //modelInstance.locationCount shouldBe ("TODO")
        }

        // to test the property `userCount`
        should("test userCount") {
            // uncomment below to test the property
            //modelInstance.userCount shouldBe ("TODO")
        }

        // to test the property `proofCount`
        should("test proofCount") {
            // uncomment below to test the property
            //modelInstance.proofCount shouldBe ("TODO")
        }

        // to test the property `created`
        should("test created") {
            // uncomment below to test the property
            //modelInstance.created shouldBe ("TODO")
        }

    }
}
